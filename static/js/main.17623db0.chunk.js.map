{"version":3,"sources":["Card.js","CardList.js","Players.js","SearchBox.js","App.js","serviceWorker.js","index.js"],"names":["Card","playerNumber","name","position","profilePic","className","src","alt","CardList","players","style","margin","map","athlete","i","key","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","filteredPlayers","this","filter","toLowerCase","includes","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17623db0.chunk.js","sourcesContent":["import React from 'react'; //needed since I am writing JSX below\r\n\r\nconst Card = ({playerNumber, name, position, profilePic}) => {\r\n\treturn (\r\n\t\t<div className='bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5'> {/*Techyon styling*/}\r\n\t\t\t<img src={profilePic} alt='Tampa Bay Player' className='photoSize' />\r\n\t\t\t<div>\r\n\t\t\t\t<h2 className='pb4'>{name}</h2>\r\n\t\t\t\t<p><span className='f2 ma2 numberLft'>#{playerNumber}</span> <span className='f3 ma2 textRt'>{position}</span></p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ players }) => {\r\n\treturn (\r\n\t\t<div style={{margin: '0 15vw'}}> {/*separation of concerns...refactor this to index.css*/}\r\n\t\t\t{\r\n\t\t\t\tplayers.map((athlete, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={players[i].playerNumber} \r\n\t\t\t\t\t\t\tplayerNumber={players[i].playerNumber} \r\n\t\t\t\t\t\t\tname={players[i].name} \r\n\t\t\t\t\t\t\tposition={players[i].position} \r\n\t\t\t\t\t\t\tprofilePic={players[i].profilePic}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","export const players = [\r\n\t{\r\n\t  playerNumber: 70,\r\n\t  name: 'Nick Anderson',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/NickAnderson.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 68,\r\n\t  name: 'Jalen Beeks',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/JalenBeeks.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 63,\r\n\t  name: 'Diego Castillo',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/DiegoCastillo.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 47,\r\n\t  name: 'Oliver Drake',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/OliverDrake.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 36,\r\n\t  name: 'Andrew Kittredge',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/AndrewKittredge.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 49,\r\n\t  name: 'Brendan McKay',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/BrendanMcKay.jpg'\r\n\t},\r\n\t\t{\r\n\t  playerNumber: 50,\r\n\t  name: 'Charlie Morton',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/CharlieMorton.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 15,\r\n\t  name: 'Emilio Pagan',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/EmilioPagan.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 38,\r\n\t  name: 'Colin Poche',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/ColinPoche.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 45,\r\n\t  name: 'Austin Pruitt',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/AustinPruitt.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 52,\r\n\t  name: 'Chaz Roe',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/ChazRoe.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 48,\r\n\t  name: 'Ryan Yarbrough',\r\n\t  position: 'Pitcher',\r\n\t  profilePic: '/tamparoster/img/RyanYarbrough.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 37,\r\n\t  name: 'Travis Arnaud',\r\n\t  position: 'Catcher',\r\n\t  profilePic: '/tamparoster/img/TravisArnaud.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 10,\r\n\t  name: 'Mike Zunino',\r\n\t  position: 'Catcher',\r\n\t  profilePic: '/tamparoster/img/MikeZunino.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 1,\r\n\t  name: 'Willy Adames',\r\n\t  position: 'Infield',\r\n\t  profilePic: '/tamparoster/img/WillyAdames.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 21,\r\n\t  name: 'Jesus Aguilar',\r\n\t  position: 'Infield',\r\n\t  profilePic: '/tamparoster/img/JesusAguilar.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 43,\r\n\t  name: 'Michael Brosseau',\r\n\t  position: 'Infield',\r\n\t  profilePic: '/tamparoster/img/MichaelBrosseau.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 26,\r\n\t  name: 'Ji-Man Choi',\r\n\t  position: 'Infield',\r\n\t  profilePic: '/tamparoster/img/JimanChoi.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 5,\r\n\t  name: 'Matt Duffy',\r\n\t  position: 'Infield',\r\n\t  profilePic: '/tamparoster/img/MattDuffy.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 9,\r\n\t  name: 'Eric Sogard',\r\n\t  position: 'Infield',\r\n\t  profilePic: '/tamparoster/img/EricSogard.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 24,\r\n\t  name: 'Avisail Garcia',\r\n\t  position: 'Outfield',\r\n\t  profilePic: '/tamparoster/img/AvisailGarcia.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 54,\r\n\t  name: 'Guillermo Heredia',\r\n\t  position: 'Outfield',\r\n\t  profilePic: '/tamparoster/img/GuillermoHeredia.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 39,\r\n\t  name: 'Kevin Kiermaier',\r\n\t  position: 'Outfield',\r\n\t  profilePic: '/tamparoster/img/KevinKiermaier.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 17,\r\n\t  name: 'Austin Meadows',\r\n\t  position: 'Outfield',\r\n\t  profilePic: '/tamparoster/img/AustinMeadows.jpg'\r\n\t},\r\n\t{\r\n\t  playerNumber: 29,\r\n\t  name: 'Tommy Pham',\r\n\t  position: 'Outfield',\r\n\t  profilePic: '/tamparoster/img/TommyPham.jpg'\r\n\t},\r\n  ];\r\n  ","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='pa2 ba'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='search player'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport { players } from './Players';\r\nimport SearchBox from './SearchBox';\r\n\r\n\r\n\t//app comonent with two states\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tplayers: players,\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filteredPlayers = this.state.players.filter(players =>{\r\n\t\t\treturn players.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t})\r\n\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<img id='raysLogo' src='/tamparoster/img/tampaLogo.png' alt='Tampa Bay Rays Logo' />\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<CardList players={filteredPlayers}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\nimport { players } from './Players'; //destructured because I will add more variables in future\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}